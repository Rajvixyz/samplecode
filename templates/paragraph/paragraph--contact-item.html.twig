{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set hero_image = paragraph.field_contact_image.entity.field_media_image.entity.fileuri %}
{%
  set classes = [
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'contact-information__items__item',
    hero_image ? 'has-image' : 'no-image'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% if hero_image is not null %}
    {{ content.field_contact_image }}
      {# <div class="contact-information__items__item__image">
        <svg>
          <defs>
            <clipPath id="clip-path">
              <path id="path-2" class="cls-1" d="M0 101.3 183.9 0 288 88.1v185.3L206.7 317 .3 287.7z"/>
            </clipPath>
          </defs>
          <g style="isolation:isolate">
            <g id="Layer_1" data-name="Layer 1">
              <g>
                <path id="path-2-2" data-name="path-2" class="cls-1" d="M0 101.3 183.9 0 288 88.1v185.3L206.7 317 .3 287.7z"/>
                <g clip-path="url(#clip-path)">
                  <image xlink:href="{{ file_url(hero_image) }}"
                         x="0" y="0" width="100%" height="100%"
                         preserveAspectRatio="xMinYMin slice" />
                </g>
              </g>
            </g>
          </g>
        </svg>
      </div> #}
    {% endif %}
    <div class="contact-information__items__item__content">
      {% if paragraph.field_contact_name %}
        <h3>{{ paragraph.field_contact_name.value }}</h3>
      {% endif %}

      {% if paragraph.field_contact_title %}
        <em>{{ paragraph.field_contact_title.value }}</em>
      {% endif %}

      <div class="contact-information__items__item__content__description-container">
        {% if paragraph.field_contact_description.value is not empty  %}
          <div class="contact-information__items__item__content__description">
            <p>{{ paragraph.field_contact_description.value|nl2br }}</p>
          </div>
        {% endif %}
        <div class="contact-information__items__item__content__contact">
          <p>
            {% if paragraph.field_contact_phone_number.value %}
              {{ 'Phone'|t() }}: <a href="tel:{{ paragraph.field_contact_phone_number.value }}"> <strong>{{ paragraph.field_contact_phone_number.value }}</strong></a><br>
            {% endif %}
              {% if paragraph.field_fax.value %}
              {{ 'Fax'|t() }}: <a href="tel:{{ paragraph.field_fax.value }}"> <strong>{{ paragraph.field_contact_phone_number.value }}</strong></a><br>
            {% endif %}
            {% if paragraph.field_contact_email.value %}
              {{ 'Email'|t() }}: <a href="mailto:{{ paragraph.field_contact_email.value }}"> <strong>{{ paragraph.field_contact_email.value }}</strong></a>
            {% endif %}
          </p>
        </div>
      </div>
    </div>
  </div>
{% endblock paragraph %}
